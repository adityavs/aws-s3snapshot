#!/bin/bash

#
# Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# SPDX-License-Identifier: MIT-0
#
#This script create a lambda package from the dist package generated by setuptools
function usage
{
    echo "usage: build [[-t] | [-h]]"
    echo "Parameters:"
    echo "-t | --transfer = transfer the zip package to S3 bucket (koiker-upload)"
}

cur_pwd=$(pwd)
transfer=false
bucket="your-bucket-name"

# Process input parameters
while [ "$1" != "" ]; do
    case $1 in
        -t | --transfer )echo "Transfering package to S3"
                                transfer=true
                                ;;
        -h | --help )           usage
                                exit
                                ;;
    esac
    shift
done

echo "AWS Lambda package builder"
echo ""
echo "Current directory: $cur_pwd"

# Checking VIRTUAL_ENV
if ! [ -n "$VIRTUAL_ENV" ]; then
        echo "Please create virtualenv or activate: "
        echo "virtualenv aws-s3snapshot"
        echo "source aws-s3snapshot/bin/activate"
        exit 1
fi

virtualenv=$VIRTUAL_ENV

# Checking if dist and file exist
if ! [ -d dist ]; then
    echo "There is no package to process. Please run: python setup.py sdist"
    exit 1
fi

echo "Changing to dist directory"
cd dist

file=$(find . -regex ".*s3snapshot-[0-9]\.[0-9]\.[0-9]\.tar\.gz" -type f | sort | tail -n1)

if [ -z "$file" ]; then
        echo "There is no package to process. Please run: python setup.py sdist first"
        exit 1
fi

echo "Found latest file: $file"
echo ""
echo "Extractig files"
tar -xvzf $file
tmp_folder="${file%.*}"
folder="${tmp_folder%.*}"

echo "Entering the extracted folder: $folder"
cd $folder
zip_file=$folder'.zip'

echo "Creating new zip file: $zip_file"
zip -r9 $zip_file *

echo "Adding site-packages to the zip file"
tmp_folder=$(pwd)
cd $VIRTUAL_ENV/lib/python2.7/site-packages/
zip -r9 $tmp_folder${zip_file#.} * -x "*boto3*" -x "*botocore*" -x "*pip*" -x "*s3transfer*"
cd $tmp_folder

echo "Moving zip file to dist folder"
mv $zip_file ..
tmp_folder=$(pwd)
cd ..

if [ "$transfer" = true ]; then
    echo "Copying file to S3 bucket"
    aws s3 cp $zip_file s3://$bucket
fi

echo "Removing temporary extracted folder: $tmp_folder"

read -p "Do you wish to remove this folder? (yes/no): " yn

if [ "$yn" == "yes" ]; then
    rm -rf $tmp_folder
else
    echo "Keeping the temporary folder"
fi

cd $cur_pwd
echo "Finished!"
